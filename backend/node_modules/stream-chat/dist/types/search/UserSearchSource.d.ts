import { BaseSearchSource } from './BaseSearchSource';
import type { StreamChat } from '../client';
import type { UserFilters, UserOptions, UserResponse, UserSort } from '../types';
import type { SearchSourceOptions } from './types';
export declare class UserSearchSource extends BaseSearchSource<UserResponse> {
    readonly type = "users";
    private client;
    filters: UserFilters | undefined;
    sort: UserSort | undefined;
    searchOptions: Omit<UserOptions, 'limit' | 'offset'> | undefined;
    constructor(client: StreamChat, options?: SearchSourceOptions);
    protected query(searchQuery: string): Promise<{
        items: UserResponse[];
    }>;
    protected filterQueryResults(items: UserResponse[]): UserResponse[];
}
