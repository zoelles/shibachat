import { BaseSearchSource } from './BaseSearchSource';
import type { Channel } from '../channel';
import type { StreamChat } from '../client';
import type { ChannelFilters, ChannelOptions, ChannelSort } from '../types';
import type { SearchSourceOptions } from './types';
export declare class ChannelSearchSource extends BaseSearchSource<Channel> {
    readonly type = "channels";
    private client;
    filters: ChannelFilters | undefined;
    sort: ChannelSort | undefined;
    searchOptions: Omit<ChannelOptions, 'limit' | 'offset'> | undefined;
    constructor(client: StreamChat, options?: SearchSourceOptions);
    protected query(searchQuery: string): Promise<{
        items: Channel[];
    }>;
    protected filterQueryResults(items: Channel[]): Channel[];
}
